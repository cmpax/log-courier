#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          log-courier
# Required-Start:    $local_fs $remote_fs $syslog
# Required-Stop:     $local_fs $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Log Courier, a lightweight log shipper with Logstash integration.
# Description:	     Controls the Log Courier daemon
### END INIT INFO

# source function library
. /lib/init/vars.sh
. /lib/lsb/init-functions

DAEMON='/opt/log-courier/bin/log-courier'
DATA_DIR='/var/lib/log-courier'
PID='/var/run/log-courier.pid'
NAME='log-courier'
DESC='Logstash shipper'
VERBOSE='yes'

test -x $DAEMON || exit 0

# check if file exists
if [ -f /etc/sysconfig/log-courier ]; then
	. /etc/sysconfig/log-courier
fi

# set default config file, if $CONFIG_FILE is not set
if [ -z ${CONFIG_FILE} ]; then
	CONFIG_FILE='/etc/log-courier.conf'
fi

do_start() {
    # Return
    #   0 if daemon has been started
    #   1 if daemon was already running
    #   2 if daemon could not be started
    start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON --chdir $DATA_DIR --test > /dev/null \
        || return 1
    start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON --chdir $DATA_DIR --background --make-pidfile -- \
        -config="${CONFIG_FILE}" $DAEMON_OPTS 2>/dev/null \
        || return 2
}

test_logcourier_config() {
    $DAEMON -config="${CONFIG_FILE}" -config-test
}

do_stop()
{
    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PID --name $NAME
    RETVAL="$?"

    if [ $? -eq 0 ]; then
	rm $PID
    fi

    sleep 1
    return "$RETVAL"
}

do_reload() {
    start-stop-daemon --stop --signal HUP --quiet --pidfile $PID --name $NAME
    return 0
}

case "$1" in
	start)
	        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	        do_start
	        case "$?" in
	            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
	            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	        esac
	;;
	stop)
	        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	        do_stop
	        case "$?" in
	            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
	            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	        esac
	;;
	status)
		status_of_proc -p "$PID_FILE" "$DAEMON" "$DESC"
	;;
	reload)
		log_daemon_msg "Reloading $DESC configuration" "$NAME"

	        if ! test_logcourier_config; then
	            log_end_msg 1 # Configuration error
	            exit 0
	        fi

	        do_reload
	        log_end_msg $?
	;;
	restart)
	        log_daemon_msg "Restarting $DESC" "$NAME"

	        # Check configuration before stopping
	        if ! test_logcourier_config; then
	            log_end_msg 1 # Configuration error
        	    exit 0
	        fi

	        do_stop
	        case "$?" in
	            0|1)
	                do_start
	                case "$?" in
	                    0) log_end_msg 0 ;;
	                    1) log_end_msg 1 ;; # Old process is still running
	                    *) log_end_msg 1 ;; # Failed to start
	                esac
	        ;;
        	    *)
	                # Failed to stop
	                log_end_msg 1
	        ;;
	        esac
	;;
	configtest|testconfig)
		log_daemon_msg "Testing $DESC configuration"
	        test_logcourier_config
	        log_end_msg $?
	;;
	*)
		echo "Usage: $0 start|stop|status|reload|restart|configtest"
		exit 1
	;;
esac


